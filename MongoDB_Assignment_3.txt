use restaurants

db.createCollection('addresses')

mongoimport --db restaurants --collection addresses --file restaurants.json

show dbs

use restaurants

1. db.addresses.find().pretty()

2. db.addresses.find({},{name: 1,restaurant_id: 1,cuisine: 1,borough: 1})

3. db.addresses.find({},{name: 1,restaurant_id: 1,cuisine: 1,borough: 1,_id: 0})

4. db.addresses.find({},{name: 1,restaurant_id: 1,"address.zipcode": 1,borough: 1,_id: 0})

5. db.addresses.find({borough:'Bronx'}).limit(5).pretty()

6. db.addresses.find({borough:'Bronx'}).pretty()

7. db.addresses.find({borough:'Bronx'}).skip(5).limit(5).pretty()

8. db.addresses.find({"grades.score":{$gt:90}})

9. db.addresses.find({$and: [{"grades.score": { $gt: 80 } }, {"grades.score": { $lt: 100 } }]}).pretty()

10. db.addresses.find({"address.coord":{$lt:-95.754168}})

11. db.addresses.find({$and: [{cuisine:{$ne:'American'} },{"grades.score": { $gt: 70 } },{$expr: {$lt: [{$arrayElemAt: ["$address.coord", 0]}, -65.754168]}} ]} ).pretty()

12. db.addresses.find({$and: [{cuisine:{$ne:'American'} },{"grades.score": { $gt: 70 } },{$expr: {$gt: [{$arrayElemAt: ["$address.coord", 1]}, -65.754168]}}]} ).pretty()


13. db.addresses.find({$and: [{cuisine:{$ne:'American'} }, {"grades.grade": 'A' }, {borough:'Brooklyn'}]} ).sort({cuisine: -1})


14. db.addresses.find({name:/^Wil/}, {name: 1,restaurant_id: 1,cuisine: 1,borough: 1});


15. db.addresses.find({"name": { "$regex": "ces$" }}, {name: 1,restaurant_id: 1,cuisine: 1,borough: 1});


16. db.addresses.find({name:/Reg/}, {name: 1,restaurant_id: 1,cuisine: 1,borough: 1});


17. db.addresses.find({$and: [{borough:'Bronx'}, {$or: [{cuisine:'American' }, {cuisine:'Chinese' }]}]});

	
18. db.addresses.find({$or: [{borough:'Staten Island' }, {borough:'Bronxor Brooklyn' }, {borough:'Queens' }]},{name: 1,restaurant_id: 1,cuisine: 1,borough: 1});


19. db.addresses.find({ borough: { $nin: [ 'Staten Island', 'Bronxor Brooklyn','Queens' ]}},{name: 1,restaurant_id: 1,cuisine: 1,borough: 1});


20. db.addresses.find({"grades.score":{$lte:10}},{name: 1,restaurant_id: 1,cuisine: 1,borough: 1});


21. db.addresses.find({$or: [
{ cuisine: { $nin: [ 'American', 'Chinees','Queens' ]} },
{name:/^Wil/}]},{name: 1,restaurant_id: 1,cuisine: 1,borough: 1})


22. db.addresses.find({
$and: [
    {"grades.score": 11 },
    {"grades.grade": 'A' },
    {date : ISODate("2014-08-11T00:00:00Z")}]},
{name: 1,restaurant_id: 1,cuisine: 1,borough: 1,"grades.grade": 1} );


25. db.addresses.find().sort({name: 1});
 
26. db.addresses.find().sort({name: -1});


31. db.addresses.find(
{name:/mon/}
,{name: 1,restaurant_id: 1,cuisine: 1,borough: 1,"address.coord": 1});


32. db.addresses.find(
{name:/^Mad/},
{name: 1,restaurant_id: 1,cuisine: 1,borough: 1,"address.coord": 1});
