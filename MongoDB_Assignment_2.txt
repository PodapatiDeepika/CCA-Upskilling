1. use population

2. db.createCollection('zipcodes');

3. import that file directly via compass


Atlanta Population
=========================================================================================
1. db.zipcodes.find({$and:[{city:"ATLANTA"},{state:"GA"}]});

2. db.zipcodes.aggregate([{$match:{$and:[{city:"ATLANTA"},{state:"GA"}]}}]);

3. db.zipcodes.aggregate([{ $match :{city:"ATLANTA"}},{"$group" : {_id:"$city", count: {$sum: 1}}}]);

4. db.zipcodes.aggregate([{ $match :{city:"ATLANTA"}},{"$group" : {_id:"$city", totalPop: {$sum: "$pop"}}}]);


Populations by State
========================================================================================
1. db.zipcodes.aggregate([{"$group" : {_id:"$state", totalPop: {$sum: "$pop"}}}]);

2. db.zipcodes.aggregate([{"$group" : {_id:"$state", totalPop: {$sum: "$pop"}}},{$sort: {"_id.totalPop": -1}}]);

3. db.zipcodes.aggregate([{$limit: 3},{"$group" : {_id:"$state", totalPop: {$sum: "$pop"}}},{$sort: {"_id.totalPop": -1}}]);


Populations by City
========================================================================================
1. db.zipcodes.aggregate([{"$group" : {_id:{city: "$city",state: "$state"}, totalPop: {$sum: "$pop"}}}]);

2. db.zipcodes.aggregate([{"$group" : {_id:{city: "$city",state: "$state"}, totalPop: {$sum: "$pop"}}},{$sort: {"_id.totalPop": -1}}]);

3. db.zipcodes.aggregate([{$limit: 3},{"$group" : {_id:{city: "$city",state: "$state"}, totalPop: {$sum: "$pop"}}},{$sort: {"_id.totalPop": -1}}]);

4. db.zipcodes.aggregate([{$limit: 3},{ $match :{city:"Texas"}},{"$group" : {_id:{city: "$city",state: "$state"}, totalPop: {$sum: "$pop"}}},{$sort: {"_id.totalPop": -1}}]);


Bonus
======================================================================================
1. db.zipcodes.aggregate([{"$group" : {_id:"$state", avgPop: {$avg: "$pop"}}}]);

2. db.zipcodes.aggregate([{$limit: 3},{"$group" : {_id:"$state", avgPop: {$avg: "$pop"}}},{$sort: {"_id.avgPop": -1}}]);